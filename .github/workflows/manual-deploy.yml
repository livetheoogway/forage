name: Manual Deployment to Maven Central

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "üë∑ Checkout code"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "‚òï Set up java"
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: "üîß Compile"
        run: mvn compile

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: "üë∑ Checkout code"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "‚òï Set up java"
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: "üóΩ Publish package"
        run: mvn clean deploy -DskipTests -Prelease
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

  tag_release:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: "üë∑ Checkout code"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "üìé Install xmllint"
        run: sudo apt-get install -y libxml2-utils

      - name: "üìë Setup release information"
        run: |
          pom_version=`xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml`
          echo "POM_VERSION=$pom_version" >> $GITHUB_ENV

      - name: "‚úèÔ∏è Generate release changelog"
        id: extract-release-changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          unreleasedOnly: "true"
          stripHeaders: "true"
          stripGeneratorNotice: "true"
          futureRelease: ${{ env.POM_VERSION }}

      - name: "üìç Create release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.POM_VERSION }}
          release_name: v${{ env.POM_VERSION }}
          draft: false
          prerelease: false
          body: ${{ steps.extract-release-changelog.outputs.changelog }}

      - name: "‚úèÔ∏è Generate full changelog"
        id: extract-changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          stripGeneratorNotice: "true"

      - name: "‚õ≤ Commit files"
        env:
          CI_USER: github-actions
          CI_EMAIL: github-actions@github.com
        run: |
          git config --local user.email "$CI_EMAIL"
          git config --local user.name "$CI_USER"
          git status
          git add CHANGELOG.md && git commit -m 'Updated CHANGELOG.md' && echo "push=true" >> $GITHUB_ENV || echo "No changes to CHANGELOG.md"

      - name: "‚è´ Push changes"
        if: env.push == 'true'
        env:
          CI_USER: github-actions
          CI_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push "https://$CI_USER:$CI_TOKEN@github.com/$GITHUB_REPOSITORY.git" HEAD:master